[project]
name = "sec-nlp"
version = "0.1.0"
description = "Summarize SEC filings using local llm"
authors = [
  { name = "Nicolas Hill", email = "your-email@example.com" }
]
requires-python = ">=3.11,<3.14"
dependencies = [
  "python-dotenv",
  "transformers",
  "torch",
  "pydantic>=2.0.0",
  "langchain>=1.0.2",
  "langchain-core>=1.0.0",
  "langchain-community",
  "langchain-text-splitters",
  "langchain-huggingface",
  "beautifulsoup4",
  "lxml",
  "markdownify",
  "huggingface_hub",
  "sec_edgar_downloader",
  "accelerate>=1.10.1",
  "uuid",
  "sentence-transformers>=5.1.0",
  "qdrant-client>=1.15.1",
  "platformdirs>=4.5.0",
  "pydantic-settings>=2.11.0",
  "langchain-ollama>=1.0.0",
  "rich>=14.2.0",
  "questionary>=2.1.1",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
pythonpath = ["."]
filterwarnings = ["ignore::DeprecationWarning"]
addopts = "-v --tb=short --import-mode=importlib"

[tool.uv_build]
package = "sec_nlp"
include = ["pyproject.toml", "README.md"]

[tool.setuptools.package-data]
sec_nlp = ["py.typed"]

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
mypy_path = "$MYPY_CONFIG_FILE_DIR/types"
strict = true
follow_imports = "silent"
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
pretty = true
files = [
    "src/**/*.py",
    "tests/**/*.py",
]
exclude = [
  '^dist/.*',
  '^build/.*',
]

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "langchain_community.*",
    "langchain_core.*",
    "langchain_text_splitters.*",
    "langchain_huggingface.*",
    "langchain_pinecone.*",
    "langchain_ollama.*",
    "sec_edgar_downloader.*",
    "pinecone.*",
    "transformers.*",
    "torch.*",
    "pytest.*"
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.autopep8]
recursive = true
in_place = false
max_line_length = 100
ignore = ["E203", "W503"]

[tool.ruff]
line-length = 80
target-version = "py311"

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
]
ignore = [
  "E501",  # line too long (handled by formatter)
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"sec_nlp/tests/*" = ["F401", "F811"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.maturin]
features = ["pyo3/extension-module"]
module-name = "sec_o3"
manifest-path = "crates/sec_o3/Cargo.toml"
python-source = "src"

[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[dependency-groups]
dev = [
  "pytest-cov>=7.0.0",
  "coverage[toml]>=7.0.0",
  "mypy>=1.8.0",
  "ruff>=0.6.0",
  "types-requests",
  "types-tqdm",
  "types-PyYAML",
  "maturin>=1.0,<2.0",
  "pytest>=8.4.2",
  "pip>=25.2",
  "typing-extensions>=4.15.0",
]
