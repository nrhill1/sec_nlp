name: CI

on:
    push:
        branches: [main]
        tags: ["v*"]
    pull_request:
        branches: [main]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read

jobs:
    test:
        name: Test (${{ matrix.os }}, py${{ matrix.python }})
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
                python: ["3.11", "3.12"]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python }}

            - name: Setup uv
              uses: astral-sh/setup-uv@v3

            - name: Cache venv
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-py${{ matrix.python }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
                  restore-keys: |
                      venv-${{ runner.os }}-py${{ matrix.python }}-

            - name: Cache uv downloads
              uses: actions/cache@v4
              with:
                  path: ~/.cache/uv
                  key: uvcache-${{ runner.os }}-py${{ matrix.python }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
                  restore-keys: |
                      uvcache-${{ runner.os }}-py${{ matrix.python }}-

            - name: Install (dev)
              run: uv sync --dev --locked || uv sync --dev

            - name: Run tests (pytest + coverage)
              shell: bash
              run: |
                  set -euo pipefail
                  mkdir -p test_logs
                  TS="$(date +'%Y-%m-%dT%H-%M-%S')"
                  LOG="test_logs/test_${TS}.log"
                  set -o pipefail
                  uv run pytest \
                    --junitxml=pytest.xml \
                    --cov=sec_nlp \
                    --cov-report=xml:coverage.xml \
                    --cov-report=html \
                    -v --maxfail=1 --tb=short --color=yes \
                    --basetemp .pytest_tmp --cache-clear \
                    2>&1 | tee "$LOG"

            - name: Upload test logs
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: test-logs-${{ matrix.os }}-py${{ matrix.python }}
                  path: |
                      test_logs/**
                      .pytest_tmp/**
                  if-no-files-found: ignore
                  retention-days: 14

            - name: Upload JUnit + Coverage XML
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: reports-${{ matrix.os }}-py${{ matrix.python }}
                  path: |
                      pytest.xml
                      coverage.xml
                  if-no-files-found: error
                  retention-days: 14

            - name: Upload HTML coverage
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: htmlcov-${{ matrix.os }}-py${{ matrix.python }}
                  path: htmlcov/**
                  if-no-files-found: ignore
                  retention-days: 7

            - name: pip-audit (env)
              run: |
                  uv run python -m pip install --upgrade pip pip-audit >/dev/null
                  uv run pip-audit -l || true

    build:
        name: Build (sdist + wheel)
        needs: [test]
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.11"

            - name: Setup uv
              uses: astral-sh/setup-uv@v3

            - name: Sync (build env)
              run: uv sync --locked || uv sync

            - name: Build package
              run: uv build

            - name: Upload dist artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: dist
                  path: dist/**
                  if-no-files-found: error
                  retention-days: 14
